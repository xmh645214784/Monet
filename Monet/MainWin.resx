<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripStatusLabel2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4QobECcNZDbHEAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPlSURBVHhe
        7ds9ixRZFMbxATMxM5INFgwE9zMIfoHFfFMxMFQxMdXMQPON9wNs4oaLqZgJgoGpiaEgKOjq+TWWHM9c
        nenuutU9e33gD0VV3fPSNXVfzq05WEBngivBjeB+8Ffwb/AiePMFx8655h73aqPtidQvwfXgn+Bd8GlD
        tGWDLTb3WqeD28HT4L+gldA2sMk2H3ztjU4F14JXQSvwHvDFJ9871e/B86AVZOZZ8DC4FfwRXA4uBN5x
        OHbONfe4V5uWrQzfYlhcvwaPg1ZQ+BC4fjM4H2wqbdlgi82WL7gupkV0KXgdtAJ5G9wLzgZzi022+Wj5
        FpPYuupq8D6ozj2dP4NzQW/xwVfrL0JsYpxdOpsHQXWIR8HFYGnxyXcrJrHO1kEy9HdQnXwM7gS7lhjE
        UuMT8yw/QuvJm73tpPf9jsQiphqn2LeS96kafRn8FuybxCS2Gu/GfYIetXZ4HPTo4eeS2OqPIIe1Rwdj
        ah3q/Int45OvEmN9HeSy1jyhTnJ0Mvv0zh8lsdaOUU7Hksa5Ifaht19XYq55HPkQDRt1bm+sPamq8wS5
        /XBotMLKDcy2djHJmUtirzNGOTZljV2XtKacvaRnfvKFnnN4OeSc5NisJyg05BstOnrO7SU++XLcS3Ko
        Cyi5HpJqS77pbtBT2Rd6Si7Zl1y/kXpbLmN5b3pPeHJA6Cm55L5Art/UGBUdczDHHjO3UPaH3qpzGzl/
        lcprvqgK01vZH3pLTtmfnFdSk6ul623KWMdV9ofeklP2J+fVvoMNiHxBMXIJZZ9YQrXQKvfVLkw+qSK7
        hLJPLCG5ZZ9yX21F5ZPK0kso+8QSklv2KffVflw+qTa/hLJPLCG5ZZ9yX21K5pM2KJZQ9oklJLfsU+6r
        ndl80i7NJprm9tlWD7ZZO8gt25L7oerJplvSSyQ/senaQW7Zjtx//gDDvwLDd4LDD4PDT4SGnwoPvxgy
        NAy9HKahCyI0fEls+KIoDV0Wp+E3RobfGqOhN0dp+O1xGvoDiUl1zBzqExka/iMp0jMP+5ncpKE/lJw0
        9KeyZNgY+mNpYqj1lwBj7S4mS3zWcX5CrLMln+V9qh0jzLZMOXuuHSbxwVed4UFsW7/zR0mPWofICYuO
        //W/zEwyptbJUsbTcV0VZpvymrZssNV64hOurz3OzyG9b107tFCMVJFVllabt0Fhl0ZNDo6dc8097q0F
        zBZ873w00tlYYdWldE/44rNLR7eprLEVGlRbcnltLthkm4/vruf3Reptio4qr7Xkvg7assHWoRreSZF3
        3AaEXRhbUfbjbEramTV7g2PnXHOPe7X5Wrfvo4ODz5P6r4ZJ5iKnAAAAAElFTkSuQmCC
</value>
  </data>
</root>